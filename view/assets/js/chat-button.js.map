{"version":3,"sources":["../jsx/chat-button.jsx"],"names":[],"mappings":"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","file":"chat-button.js","sourcesContent":["var socket = io(\"http://localhost:3000\");\r\nconst TextField = require('material-ui/lib/text-field');\r\nconst RaisedButton = require('material-ui/lib/raised-button');\r\nconst ConnectionPanel = require('./chat-components/connection-panel');\r\nconst GridList = require('material-ui/lib/grid-list/grid-list');\r\n\r\nconst MessageList = require('./chat-components/message-list');\r\nvar React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar sha1 = require('sha1');\r\n\r\nlet injectTapEventPlugin = require(\"react-tap-event-plugin\");\r\ninjectTapEventPlugin();\r\n\r\nvar Chat = React.createClass({\r\n    getInitialState () {\r\n        return {\r\n            liked: false, messages: [], nick: '', showDialogStandardActions: false, disButtonState: true,\r\n            conButtonState: false\r\n        };\r\n    },\r\n    renderMessage (msg) {\r\n        let messages = this.state.messages;\r\n        let new_message = JSON.parse(msg);\r\n        messages.push(new Date().toJSON().substring(10, 19).replace('T', ' ') + ' ' + new_message['nick'] + ': ' + new_message['message']);\r\n        console.log(messages);\r\n        this.setState({messages: messages})\r\n    },\r\n    componentDidMount() {\r\n        socket.on('message', this.renderMessage);\r\n    },\r\n    sendToChat () {\r\n        let message = JSON.stringify({message: this.state.message, nick: this.state.nick});\r\n        socket.emit('message', message);\r\n        this._textInput.clearValue();\r\n    },\r\n    _handleInputChange (e) {\r\n        this.setState({message: e.target.value});\r\n    },\r\n    _activeSendButton (value) {\r\n        this.setState({disButtonState: value});\r\n    },\r\n    render () {\r\n        let messages = this.state.messages;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"chat-window\">\r\n                    <GridList className='grid-list' cols={1} cellHeight={200} padding={1}>\r\n                        <MessageList messages={messages}/>\r\n                    </GridList>\r\n                </div>\r\n                <div className=\"message-panel\">\r\n                    <TextField hintText=\"Message\" ref={component => this._textInput = component}\r\n                               onChange={this._handleInputChange}/>\r\n                    <RaisedButton label=\"Send\" disabled={this.state.disButtonState} secondary={true}\r\n                                  onClick={this.sendToChat}/>\r\n                </div>\r\n                <ConnectionPanel socket={socket} onSubmit={this._activeSendButton}/>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\n\r\nReactDOM.render(\r\n    <Chat />,\r\n    document.getElementById('content')\r\n);"]}